<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security-5.2.xsd">

<!--  security 설정 
	root Context와 같은 위치에 생성해야함
	
	security:user ==> admin 사용자를 임의로 등록하여 login 테스트
-->
<security:authentication-manager>
	<security:authentication-provider>
	
		<security:user-service>
			<security:user name="admin11" password="{noop}password" authorities="ROLE_ADMIN"/>
			<security:user name="user11" password="{noop}password" authorities="ROLE_USER"/>
		</security:user-service>

	</security:authentication-provider>
</security:authentication-manager>

<!--  DB에서 사용자 정보 불러오기 -->
<security:authentication-manager>
	<security:authentication-provider>
		<security:jdbc-user-service data-source-ref="emsHiber"/>
	</security:authentication-provider>
</security:authentication-manager>

<!--  
	intercept-url
	spring security를 통해서 접근할 url(path)를 설정 
	
	use-expressions : 
	hasRole('역할')과 같은 표현식을 사용할 수 있도록 선언
	
	<security:csrf disabled="false" />
	: csfr인증을 하지 않는것을 취소하겠다 ==> csfr인증을 하라
-->
<security:http auto-config="true" use-expressions="true">
	<security:csrf disabled="false" />
	<security:intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>
	
	<security:intercept-url pattern="/auth/**" access="permitAll()"/>
	
	<security:intercept-url pattern="/**" access="permitAll"/>
	
	<!--  
		정상적으로 로그인이 되면 / root로 redirect
		로그인이 실패하면 /login path error 변수를 하나 부착하여 
		다시 login으로 보내라
		
		login-page :
		login-page를 따로 지정하지 않으면 spring security의 기본 login창이 나옴
		따로 login.jsp를 지정하고 싶은 경우에 지정해주며
		이때는 되도록 login-processiong-url을 지정해주어야 좋다.
		login-processiont-url :
		로그인화면에서 로그인을 하면 post로 넘어가는데 url을 /login으로 강제함
	 -->
	<security:form-login login-page="/auth/login" 
						 login-processing-url="/login"
						 
						 authentication-failure-url="/auth/login?error"
						 
						 default-target-url="/"
						 username-parameter="username"
						 password-parameter="password"/>
						 
	<!--  logout을 시도해서 정상적으로 logout이 되면
		  rootPath로 redirect하라	
	 -->						 
	<security:logout logout-url="/auth/logout"
					 logout-success-url="/"/>						 
	
</security:http>
</beans>
